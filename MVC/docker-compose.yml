version: '3.8'

services:
  # PHP Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mvc_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
    networks:
      - mvc_network
    depends_on:
      - db
    command: >
      sh -c "
        if [ ! -d 'vendor' ]; then 
          if command -v composer &> /dev/null; then
            composer install --no-interaction --optimize-autoloader;
          else
            echo 'Composer not installed, using built-in autoloader';
          fi
        fi;
        php-fpm"

  # Nginx Web Server  
  web:
    image: nginx:alpine
    container_name: mvc_web
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - .:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - mvc_network
    depends_on:
      - app
    # Add hostname configuration to ensure proper URL handling
    environment:
      - VIRTUAL_HOST=localhost:80

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: mvc_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: mvc_auth
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: password
      MYSQL_USER: mvc_user
      SERVICE_NAME: mysql
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./database/setup.sql:/docker-entrypoint-initdb.d/setup.sql
    ports:
      - "3306:3306"
    networks:
      - mvc_network

  # PHPMyAdmin for Database Management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: mvc_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8081:80"
    networks:
      - mvc_network
    depends_on:
      - db

networks:
  mvc_network:
    driver: bridge
